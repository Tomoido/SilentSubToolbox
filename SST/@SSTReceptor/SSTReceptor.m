classdef SSTReceptor < handle
    % SSTReceptor
    %
    % Usage:
    %     receptorObj = SSTReceptor(varargin);
    %
    % Description:
    %     @SSTReceptor is the parent class for modeling spectral
    %     sensitivities. This implements methods that are model
    %     independent and defines the API for subclasses that implement
    %     the receptor objects for specific species, such as
    %     @SSTReceptorHuman.
    %
    % Input:
    %     None obligatory.
    %
    % Output:
    %     receptorObj - The receptorObj
    %
    % Optional key/value pairs:
    %     'verbosity' - Verbosity level for printing diagnostics. Possible
    %                   options:
    %                       'none' - No diagnostic print-out
    %                       'high' - Print everything that might be useful
    %
    %     'S' - The wavelength sampling specification in standard PTB
    %           notation. (Default: [380 2 201]).
    %
    % Methods implemented in this class:
    %     plotSpectralSensitivities - Plots the spectral sensitivities
    %                                 generated by any subclass object
    %
    % Methods that must be implemented in subclasses:
    %     makeSpectralSensitivities - Creates the spectral sensitivities
    %
    % See also:
    %     @SSTReceptorHuman
    %
    % 9/8/17  ms  Added header comments.
    
    % Public read/write properties
    properties
    end
    
    % Dependent properties, computed from other parameters
    properties
    end
    
    % Public, read-only properties.  These can be set by methods of the
    % parent class (that is, this class) but not by methods of subclasses.
    properties (SetAccess = private, GetAccess = public)
        % Verbosity level, set at constructor time.
        verbosity;
        
        % Wavelength sampling
        S;
    end
    
    % Protected properties; Methods of the parent class and all of its
    % subclasses can set these.
    properties (SetAccess = protected, GetAccess = public)
    end
    
    % Private properties. Only methods of the parent class can set or read these
    properties (Access = private)
    end
    
    % Public methods
    %
    % Methods defined in separate files are public by default, so we don't
    % explicitly decare them.
    %
    % We do stick the constructor method here.
    methods (Access=public)
        % Constructor
        function obj = SSTReceptor(varargin)
            % Parse vargin for options passed here
            p = inputParser;
            p.addParameter('verbosity','high', @ischar);
            p.addParameter('S', [380 2 201], @isnumeric);
            p.KeepUnmatched = true;
            p.parse(varargin{:});
            obj.verbosity = p.Results.verbosity;
            obj.S = p.Results.S;
        end
    end
    
    % Methods that must only be implemented in the subclasses.
    % If a subclass does not implement each and every of these methods
    % it cannot instantiate objects.
    methods (Abstract, Access=public)
        % Create the spectral sensitivities
        obj = makeSpectralSensitivities(obj);
    end
    
    % Methods may be called by the subclasses, but are otherwise private
    methods (Access = protected)
        
    end
    
    % Methods that are totally private (subclasses cannot call these)
    methods (Access = private)
        
    end
    
end
